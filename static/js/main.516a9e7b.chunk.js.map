{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","reportWebVitals.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","onChange","id","Component","ContactList","contacts","className","map","Filter","App","initialContacts","filter","addContact","newContact","shortid","generate","console","log","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6hBAsDeA,E,4MAnDbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GAAM,IAAD,EACMA,EAAEC,cAAlBJ,EADU,EACVA,KAAMK,EADI,EACJA,MAEd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKX,OACzB,EAAKY,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,uDAG1B,IAAD,EACkBW,KAAKb,MAAtBC,EADD,EACCA,KAAMC,EADP,EACOA,OACd,OACE,uBAAMS,SAAUE,KAAKL,aAArB,UACE,wBAAOM,QAAQ,YAAf,iBAEE,uBACEC,KAAK,OACLd,KAAK,OACLK,MAAOL,EACPe,SAAUH,KAAKV,aACfc,GAAG,iBAGP,wBAAOH,QAAQ,cAAf,mBAEE,uBACEC,KAAK,OACLd,KAAK,SACLK,MAAOJ,EACPc,SAAUH,KAAKV,aACfc,GAAG,mBAGP,wBAAQF,KAAK,SAAb,gC,GA9CkBG,a,QCUXC,EAVK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAClB,oBAAIC,UAAU,OAAd,SACGD,EAASE,KAAI,gBAAGL,EAAH,EAAGA,GAAIhB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAamB,UAAU,OAAvB,UACGpB,EADH,IACUC,IADDe,SCGAM,EAPA,SAAC,GAAD,IAAGjB,EAAH,EAAGA,MAAOU,EAAV,EAAUA,SAAV,OACb,0DAEE,uBAAOD,KAAK,OAAOT,MAAOA,EAAOU,SAAUA,Q,iBCmDhCQ,E,4MA/CbxB,MAAQ,CACNoB,SAAUK,EACVxB,KAAM,GACNyB,OAAQ,GACRxB,OAAQ,I,EAGVyB,WAAa,YAAuB,IAApB1B,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACd0B,EAAa,CACjBX,GAAIY,IAAQC,WACZ7B,OACAC,UAGF6B,QAAQC,IAAIJ,GACZ,EAAKrB,UAAS,SAAA0B,GAAS,MAAK,CAC1Bb,SAAS,CAAEQ,GAAH,mBAAkBK,EAAUb,gB,EAIxCc,aAAe,SAAA9B,GACb,EAAKG,SAAS,CAAEmB,OAAQtB,EAAEC,cAAcC,S,EAG1C6B,mBAAqB,WAAO,IAAD,EACI,EAAKnC,MAA1B0B,EADiB,EACjBA,OAAQN,EADS,EACTA,SACVgB,EAAmBV,EAAOW,cAChC,OAAOjB,EAASM,QAAO,SAAAY,GAAO,OAC5BA,EAAQrC,KAAKoC,cAAcE,SAASH,O,uDAI9B,IAAD,EACoCvB,KAAKb,MAA1B0B,GADf,EACCzB,KADD,EACOC,OADP,EACewB,QAChBc,GAFC,EACuBpB,SACNP,KAAKsB,sBAC7B,OACE,gCACE,2CACA,cAAC,EAAD,CAAaxB,SAAUE,KAAKc,aAC5B,0CACA,cAAC,EAAD,CAAQrB,MAAOoB,EAAQV,SAAUH,KAAKqB,eACtC,cAAC,EAAD,CAAad,SAAUoB,W,GA1CbtB,aCKHuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.516a9e7b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label htmlFor=\"nameInput\">\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            id=\"nameInput\"\r\n          />\r\n        </label>\r\n        <label htmlFor=\"numberInput\">\r\n          Number\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            id=\"numberInput\"\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\n\r\nconst ContactList = ({ contacts }) => (\r\n  <ul className=\"List\">\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className=\"Item\">\r\n        {name} {number}\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport ContactForm from './ContactForm';\nimport initialContacts from '../initialContacts.json';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\nimport shortid from 'shortid';\n\nclass App extends Component {\n  state = {\n    contacts: initialContacts,\n    name: '',\n    filter: '',\n    number: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    console.log(newContact);\n    this.setState(prevState => ({\n      contacts: [newContact, ...prevState.contacts],\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { name, number, filter, contacts } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList contacts={visibleContacts} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}